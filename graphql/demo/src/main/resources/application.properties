spring.graphql.graphiql.enabled=true
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=demo
spring.kafka.consumer.bootstrap-servers=localhost:29092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.streams.bootstrap-servers=localhost:29092
spring.kafka.streams.application-id=demo1
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.kafka.streams.properties.spring.json.trusted.packages: "*"
spring.kafka.streams.properties.spring.json.use.type.headers=false
spring.kafka.streams.properties.spring.json.value.default.type=com.example.graphql.demo.adapters.messaging.in.TransactionLogCreated

topic.input.transactionlog-created=log-transacao-emitido
topic.output.transactionlog-created=log-transacao-emitido

